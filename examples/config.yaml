agent-token-secret: my-kubernetes-secret
debug: true
image: my.registry.dev/buildkite-agent:latest
job-ttl: 5m
job-prefix: testkite-
job-active-deadline-seconds: 21600
default-termination-grace-period-seconds: 80
image-pull-backoff-grace-period: 60s
job-cancel-checker-poll-interval: 10s
empty-job-grace-period: 50s
poll-interval: 5s
job-creation-concurrency: 5
max-in-flight: 100
k8s-client-rate-limiter-qps: 20
k8s-client-rate-limiter-burst: 30
namespace: my-buildkite-ns
prometheus-port: 9216
default-image-pull-policy: Never
default-image-check-pull-policy: IfNotPresent
enable-queue-pause: true
pagination-page-size: 1000
pagination-depth-limit: 5
query-reset-interval: 10s
work-queue-limit: 2000000
image-check-container-cpu-limit: 201m
image-check-container-memory-limit: 129Mi

resource-classes:
  small:
    resource:
      requests:
        cpu: "500m"
        memory: "512Mi"
        hugepages-2Mi: "1Mi"

tags:
  - queue=my-queue
  - priority=high

# Causes the controller to prohibit the kubernetes plugin specified within jobs
# (pipeline YAML) - enabling this causes jobs with a kubernetes plugin to fail,
# preventing the pipeline YAML from having any influence over the podSpec
prohibit-kubernetes-plugin: true

# The workspace volume can be overriden from its default (an emptyDir named
# 'workspace').
workspace-volume:
  name: workspace-2-the-reckoning
  ephemeral:
    volumeClaimTemplate:
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: my-special-storage-class
        resources:
          requests:
            storage: 1Gi

# Applies to all agents
agent-config:
  # Setting a custom Agent REST API endpoint is usually only useful if you have
  # a different instance of Buildkite itself available to run.
  endpoint: http://agent.buildkite.localhost/v3

# Applies to the checkout container in all spawned pods
default-checkout-params:
  gitCredentialsSecret:
    secretName: "my-git-credentials"
  envFrom:
    - prefix: GITHUB_
      secretRef:
        name: github-secrets

# Applies to all command containers in all spawned pods
default-command-params:
  interposer: vector
  envFrom:
    - prefix: DEPLOY_
      secretRef:
        name: deploy-secrets

# Applies to all sidecar containers in all spawned pods
default-sidecar-params:
  envFrom:
    - prefix: LOGGING_
      configMapRef:
        name: logging-config

# Applied to all spawned jobs.
default-metadata:
  annotations:
    # Note the constraints on annotation names:
    # https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set
    imageregistry: "https://hub.docker.com/"
  labels:
    # Note the constraints on label names:
    # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
    argocd.argoproj.io/tracking-id: example-id-here

# This will be applied to the job's podSpec as a strategic merge patch
# See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch
pod-spec-patch:
  serviceAccountName: buildkite-agent-sa
  automountServiceAccountToken: true
  nodeSelector:
    selectors.example.com/my-selector: example-value
  containers:
    - name: container-0
      image: example.org/my-container@latest
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-secrets
              key: github-token
      resources:
        requests:
          cpu: 1
          mem: 4Gi
